unittests:
  extends: .run-on-code-changes
  stage: build
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/quality:${CACHE_IMAGE_TAG}
  tags: ["veloren/veloren", "check"]
  variables:
    GIT_DEPTH: 9999999999999
  script:
    - ln -s /dockercache/target target;
    - cat ./.gitlab/scripts/unittest.sh;
    - source ./.gitlab/scripts/unittest.sh;
  retry:
    max: 2

translation:
  extends: .release
  stage: build
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/quality:${CACHE_IMAGE_TAG}
  tags: ["veloren/veloren", "check"]
  script:
    - ln -s /dockercache/target target;
    - cat ./.gitlab/scripts/translation.sh;
    - source ./.gitlab/scripts/translation.sh;
    - TAGUUID="Z$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)" || echo "ignore this returncode, dont ask me why, it works";
    - echo ${TAGUUID}; # Use TAGUUID to mitigate https://xkcd.com/327/ in the branch name.
    - echo 'SET veloren.timestamp = "'"$(git show --no-patch --no-notes --pretty='%cd' HEAD)"'";' > upload.sql;
    - echo "SET veloren.branch = \$${TAGUUID}\$${CI_COMMIT_REF_NAME}\$${TAGUUID}\$;" >> upload.sql;
    - echo "SET veloren.sha = \$${TAGUUID}\$${CI_COMMIT_SHA}\$${TAGUUID}\$;" >> upload.sql;
    - echo '\copy translations ("country_code", "file_name", "translation_key", "status", "git_commit") from '"'translation_analysis.csv' csv header" >> upload.sql;
    - cat upload.sql;
    - PGPASSWORD="${CIDBPASSWORD}" PGSSLROOTCERT="./.gitlab/ci-db.crt" psql "sslmode=verify-ca host=cidb.veloren.net port=30432 dbname=translations" -U hgseehzjtsrghtjdcqw -f upload.sql;
  retry:
    max: 2

benchmarks:
  extends: .release
  stage: build
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/bench:${CACHE_IMAGE_TAG}
  tags: ["veloren/veloren", "check", "benchmark"]
  script:
    - unset DISABLE_GIT_LFS_CHECK;
    - ln -s /dockercache/target target;
    - cat ./.gitlab/scripts/benchmark.sh;
    - source ./.gitlab/scripts/benchmark.sh;
    - TAGUUID="Z$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)" || echo "ignore this returncode, dont ask me why, it works";
    - echo ${TAGUUID}; # Use TAGUUID to mitigate https://xkcd.com/327/ in the branch name.
    - echo 'SET veloren.timestamp = "'"$(git show --no-patch --no-notes --pretty='%cd' HEAD)"'";' > upload.sql;
    - echo "SET veloren.branch = \$${TAGUUID}\$${CI_COMMIT_REF_NAME}\$${TAGUUID}\$;" >> upload.sql;
    - echo "SET veloren.sha = \$${TAGUUID}\$${CI_COMMIT_SHA}\$${TAGUUID}\$;" >> upload.sql;
    - find target/criterion -wholename "*new/*.csv" -exec echo '\copy benchmarks ("group", "function", "value", throughput_num, throughput_type, sample_measured_value, unit, iteration_count) from '"'{}' csv header" >> upload.sql \;
    - cat upload.sql;
    - PGPASSWORD="${CIDBPASSWORD}" PGSSLROOTCERT="./.gitlab/ci-db.crt" psql "sslmode=verify-ca host=cidb.veloren.net port=30432 dbname=benchmarks" -U hgseehzjtsrghtjdcqw -f upload.sql;
  retry:
    max: 2

# Coverage is needed on master for the README.md badge to work.
# tmp remove simd as it doesnt work with tarpaulin: https://github.com/rust-lang/rust/issues/77529
coverage:
  extends: .release
  stage: build
  image: registry.gitlab.com/veloren/veloren-docker-ci/cache/tarpaulin:${CACHE_IMAGE_TAG}
  coverage: '/^\d+.\d+% coverage/'
  tags: ["veloren/veloren", "check"]
  script:
    - ln -s /dockercache/target target;
    - cat ./.gitlab/scripts/coverage.sh;
    - source ./.gitlab/scripts/coverage.sh;
  retry:
    max: 2

# Build on release or master.
windows-x86_64:
  extends:
    - .release
    - .build-windows-x86_64
  tags: ["veloren/veloren", "build", "publish", "trusted"]

macos-x86_64:
  extends:
    - .release
    - .build-macos-x86_64

macos-aarch64:
  extends:
    - .release
    - .build-macos-aarch64

linux-x86_64:
  extends:
    - .release
    - .build-linux-x86_64
  tags: ["veloren/veloren", "build", "publish", "trusted"]

linux-aarch64:
  extends:
    - .release
    - .build-linux-aarch64
  tags: ["veloren/veloren", "build", "publish", "trusted"]

# If NOT release or master, allow optional builds.
opt-windows-x86_64:
  extends:
    - .optional-release
    - .build-windows-x86_64
  tags: ["veloren/veloren", "build"]

opt-macos-x86_64:
  extends:
    - .optional-release
    - .build-macos-x86_64

opt-macos-aarch64:
  extends:
    - .optional-release
    - .build-macos-aarch64

opt-linux-x86_64:
  extends:
    - .optional-release
    - .build-linux-x86_64
  tags: ["veloren/veloren", "build"]

opt-linux-aarch64:
  extends:
    - .optional-release
    - .build-linux-aarch64
  tags: ["veloren/veloren", "build"]
